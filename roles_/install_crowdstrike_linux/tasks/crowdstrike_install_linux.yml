---
- name: Download CrowdStrike Installer
  block:
    - name: Download Crowdstrike Installer file for Debian
      become: true
      remote_user: "{{ ansible_user }}"
      aws_s3:
        region: "{{ aws_region }}"
        mode: get
        bucket: "{{ s3_location }}"
        object: "software/{{ installer_debian }}"
        dest: "{{ ansible_env.HOME }}/{{ installer_debian }}"
        overwrite: different
      when: (ansible_facts['distribution'] == "Debian")

    - name: Download Crowdstrike Installer file for Non Debian
      become: true
      remote_user: "{{ ansible_user }}"
      aws_s3:
        region: "{{ aws_region }}"
        mode: get
        bucket: "{{ s3_location }}"
        object: "software/{{ installer_others }}"
        dest: "{{ ansible_env.HOME }}/{{ installer_others }}"
        overwrite: different
      when: (ansible_facts['distribution'] == "RHEL") or (ansible_facts['distribution'] == "Oracle") or (ansible_facts['distribution'] == "CentOS") or (ansible_facts['distribution'] == "Amazon")
  tags: download

- name: Check if CrowdStrike installer files were downloaded
  block:
    - name: Check if Crowdstrike files were downloaded for Debian
      stat:
        path: "{{ ansible_env.HOME }}/{{ installer_debian }}"
      register: debian_file_downloaded
      when: (ansible_facts['distribution'] == "Debian")

    - name: Check if Crowdstrike files were downloaded for Non Debian
      stat:
        path: "{{ ansible_env.HOME }}/{{ installer_others }}"
      register: non_debian_file_downloaded
      when: ((ansible_facts['distribution'] == "RHEL") or (ansible_facts['distribution'] == "Oracle") or (ansible_facts['distribution'] == "CentOS") or (ansible_facts['distribution'] == "Amazon"))

- name: Set fact based on CrowdStrike Installer files download status
  block:
    - name: Set fact based on files download status for Debian
      set_fact:
        installer_files_download_failed: true
      when: (ansible_facts['distribution'] == "Debian") and not debian_file_downloaded.stat.exists

    - name: Set fact based on files download status for Non Debian
      set_fact:
        installer_files_download_failed: true
      when: ((ansible_facts['distribution'] == "RHEL") or (ansible_facts['distribution'] == "Oracle") or (ansible_facts['distribution'] == "CentOS") or (ansible_facts['distribution'] == "Amazon")) and not non_debian_file_downloaded.stat.exists
  tags: download

- name: Install CrowdStrike
  block:
    - name: Install Crowdstrike for Debian
      command: dpkg -i {{ installer_debian }}
      become: true
      become_method: sudo
      remote_user: "{{ ansible_user }}"
      args:
        chdir: "{{ ansible_env.HOME }}"
      register: crowdstrike_installed
      debug:
        msg: crowdstrike_installed
      when: 
        - not installer_files_download_failed
        - (ansible_facts['distribution'] == "Debian")
      failed_when: "'error' in crowdstrike_installed.stdout"
      
    - name: Install Crowdstrike for RHEL, Oracle, CentOS and Amazon Linux
      command: yum install {{ installer_others }}
      become: true
      become_method: sudo
      remote_user: "{{ ansible_user }}"
      args:
        chdir: "{{ ansible_env.HOME }}"
      register: crowdstrike_installed
      debug:
        msg: crowdstrike_installed
      when: 
        - not installer_files_download_failed
        - (ansible_facts['distribution'] == "RHEL") or (ansible_facts['distribution'] == "Oracle") or (ansible_facts['distribution'] == "CentOS") or (ansible_facts['distribution'] == "Amazon")
      failed_when: "'error' in crowdstrike_installed.stdout"
  tags: install