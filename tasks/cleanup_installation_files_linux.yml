# This playbook is used to remove the Crowdstrike installer file from the target machine
- name: Remove CrowdStrike Installer
  block:
  - name: Clean-up Crowdstrike Installer file in Debian
    file:
      path: "{{ local_path_linux }}/{{ installer_debian }}"
      state: absent
    when:
    - ansible_facts['distribution'] == "Debian"
    register: debian_is_cleaned_up

  - name: Clean-up Crowdstrike Installer file in RHEL
    file:
      path: "{{ local_path_linux }}/{{ installer_rhel }}"
      state: absent
    when:
    - ansible_facts['distribution'] == "RedHat"
    register: rhel_is_cleaned_up

  - name: Clean-up Crowdstrike Installer file in Oracle
    file:
      path: "{{ local_path_linux }}/{{ installer_oracle }}"
      state: absent
    when:
    - ansible_facts['distribution'] == "OracleLinux"
    register: oracle_is_cleaned_up

  - name: Clean-up Crowdstrike Installer file in AmazonLinux
    file:
      path: "{{ local_path_linux }}/{{ installer_amazonlinux }}"
      state: absent
    when:
    - ansible_facts['distribution'] == "Amazon"
    register: amazonlinux_is_cleaned_up
  tags: cleanup

  rescue:
  - name: Write cleanup error to stdout
    debug:
      msg: "Error occurred while trying to clean up Crowdstrike installer file"

# Write cleanup result to stdout
- name: Write debian cleanup result to stdout
  debug:
    msg: "cleaned_up_debian: {{ debian_is_cleaned_up.changed | default(false) }}"
  when:
  - debian_is_cleaned_up is defined
  - ansible_facts['distribution'] == "Debian"
  tags: cleanup

- name: Write rhel cleanup result to stdout
  debug:
    msg: "cleaned_up_rhel: {{ rhel_is_cleaned_up.changed | default(false) }}"
  when:
  - rhel_is_cleaned_up is defined
  - ansible_facts['distribution'] == "RedHat"
  tags: cleanup

- name: Write oracle cleanup result to stdout
  debug:
    msg: "cleaned_up_oracle: {{ oracle_is_cleaned_up.changed | default(false) }}"
  when:
  - oracle_is_cleaned_up is defined
  - ansible_facts['distribution'] == "OracleLinux"
  tags: cleanup

- name: Write amazonlinux cleanup result to stdout
  debug:
    msg: "cleaned_up_amazonlinux: {{ amazonlinux_is_cleaned_up.changed | default(false) }}"
  when:
  - amazonlinux_is_cleaned_up is defined
  - ansible_facts['distribution'] == "Amazon"
  tags: cleanup
