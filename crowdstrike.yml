---
- name: Check CrowdStrike Agent/Service Status, Restart or Install where necessary
  hosts: all
  vars_files:
    - vars/connection_info.yml
    - defaults/main.yml
  tasks:
    - name: wait for hosts to be available
      wait_for_connection:
        connect_timeout: 60
        timeout: 900
        sleep: 60
      tags: always
    
    - name: Linux Tasks
      block:
        - name: Include Linux Specific Variables
          include_vars:
            file: vars/linux.yml

        - name: Update ServiceNow ticket to in-progress
          roles:
            - snow_incident_in_progress

        - name: Check Agent Status | Check Service Status
          roles:
            - crowdstrike_agent_status_check_linux

        - name: Restart Agent | Restart Service
          roles:
            - crowdstrike_service_restart_linux
          when:
            - is_crowdstrike_installed_and_not_running

        - name: Install Agent | Install Service
          roles:
            - crowdstrike_agent_install_linux
          when:
            - is_crowdstrike_not_installed_and_not_running

        - name: Restart Agent | Restart Service
          roles:
            - crowdstrike_service_restart_linux
          when:
            - is_crowdstrike_installed_configured_and_not_running

        - name: Page on-desk or on-call
          roles:
            - alert_pagerduty
          when:
            - (is_crowdstrike_not_restarted or is_crowdstrike_installed_not_configured_and_not_running or is_crowdstrike_not_installed_not_configured_and_not_running)
        
        - name: Update ServiceNow ticket to resolved
          roles:
            - snow_incident_resolve
          when:
            - (is_crowdstrike_restarted or is_crowdstrike_installed_and_running or is_crowdstrike_installed_configured_and_running)

        - name: Close resolved ServiceNow ticket
          roles:
            - snow_incident_close
          when:
            - ticket_state_resolved 
      when:
        - ansible_facts['os_family'] == "Linux"

    - name: Windows Tasks
      block:
        - name: Include Windows Specific Variables
          include_vars:
            file: windows.yml
        
        - name: Update ServiceNow ticket to in-progress
          roles:
            - snow_incident_in_progress

        - name: Check Agent Status | Check Service Status
          roles:
            - crowdstrike_agent_status_check_windows

        - name: Restart Agent | Restart Service
          roles:
            - crowdstrike_service_restart_windows
          when:
            - is_crowdstrike_status_check_installed_and_not_running

        - name: Install Agent | Install Service
          roles:
            - crowdstrike_agent_install_windows
          when:
            - is_crowdstrike_status_check_not_installed_and_not_running

        - name: Restart Agent | Restart Service
          roles:
            - crowdstrike_service_restart_linux
          when:
            - is_crowdstrike_installed_and_not_running

        - name: Page on-desk or on-call
          roles:
            - alert_pagerduty
          when:
            - (is_crowdstrike_not_restarted or is_crowdstrike_not_installed_and_not_running)

        - name: Update ServiceNow ticket to resolved
          roles:
            - snow_incident_resolve
          when:
            - (is_crowdstrike_restarted or is_crowdstrike_status_check_installed_and_running or is_crowdstrike_installed_and_running)

        - name: Close resolved ServiceNow ticket
          roles:
            - snow_incident_close
          when:
            - ticket_state_resolved 
      when:
        - ansible_facts['os_family'] == "Windows"