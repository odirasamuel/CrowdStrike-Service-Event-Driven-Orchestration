---
#Check if crowdstrike is installed (Linux)
- name: Check if CrowdStrike is installed
  become_method: sudo
  remote_user: "{{ ansible_user }}"
  stat:
    path: /opt/CrowdStrike/falconctl
  register: crowdstrike_installed_output
  tags: status

- name: Crowdstrike installed status (Linux)
  set_fact:
    crowdstrike_installed: "{{ crowdstrike_installed_output.stat.exists }}"
  tags: status

#Check if crowdstrike is running (Linux)
- name: Check if Systemd is being used
  command: systemctl --version
  become_user: sudo
  remote_user: "{{ ansible_user }}"
  register: systemd_result
  tags: status

- name: Check if CrowdStrike service is running
  block:
    - name: Check when CrowdStrike is running on Systemd
      command: "systemctl status {{ crowdstrike_service_name }}"
      become_user: sudo
      remote_user: "{{ ansible_user }}"
      register: crowdsrike_service_running
      when: 
        - crowdstrike_installed
        - systemd_result.rc == 0

    - name: Check when CrowdStrike is running on SysVinit
      command: "service {{ crowdstrike_service_name }} status"
      become_user: sudo
      remote_user: "{{ ansible_user }}"
      register: crowdsrike_service_running
      when: 
        - crowdstrike_installed
        - systemd_result.rc != 0

    - debug:
        msg: "CrowdStrike Service Status: {{ crowdsrike_service_running.stdout }}"
  when: systemd_result.exists
  tags: status

- name: Crowdstrike status (Linux)
  set_fact:
    is_crowdstrike_not_installed_and_not_running: "{{ not crowdstrike_installed }}"
    is_crowdstrike_installed_and_not_running: "{{ crowdstrike_installed and not crowdsrike_service_running.exists }}"
    is_crowdstrike_installed_and_running: "{{ crowdstrike_installed and crowdsrike_service_running.exists }}"
  tags: always